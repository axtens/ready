    NULL=""
    linewidth=80
    pagelength=60
    printerdevice=NULL
    printerid=NULL
    detabwidth=8
    ffswap="<FF>"
    finalcode=NULL
    debug=0
    if argc() < 1
    then
    print "Usage:"
    print "       2Col <filename> [<->inifile|<outputfile>]"
    end
    end if
    sourcefile=argv (1)
    outputfile=argv (2)
    if access(sourcefile)=0
    then
    print "Can't open ";sourcefile
    end
    end if
    open #1, "r", sourcefile
    gosub [2COFILE]
    if outputfile=NULL
    then
    if printerdevice=NULL
    then
    printerdevice="printer"
    end if
    else
    printerdevice=outputfile
    end if
    if printerid <> NULL
    then
    print "Printer: ";printerid
    end if
    print "Printing to ";printerdevice
    open #2, "w",printerdevice
    if printcode <> NULL
    then
    if debug then print "printcode="+printcode
    execute "printcode="+printcode
    print #2,printcode;
    end if
    dim a(pagelength*2)
    leftside=space(linewidth+5)
    rightside=space(linewidth+5)
    bothsides=space(linewidth*2+10)
    pcnt=0
[CLEAR ARRAY AND LOAD] REM
    for j = 0 to pagelength*2
    a(j) = NULL
    next j
    lines = 0
[KEEP LOADING ARRAY] if not eof(1)
    then
    line input #1, rec
    ffpos=instr(rec,chr(12))
    if ffpos > 0
    then
    ffrec=rec
    gosub [KILL FF]
    rec=ffrec
    end if
    cDetabRec=rec
    gosub [DETABSTART]
    rec=cDetabRec
[BREAK LINE] REM
    reclen=len(rec)
    if reclen>linewidth
    then
    recpos=linewidth
[LOOK FOR BREAK] REM
    if mid(rec,recpos,1)<>space(1) and recpos>1
    then
    recpos=recpos-1
    goto [LOOK FOR BREAK]
    end if
    if recpos=0
    then
    a(lines)=rec
    else
    a(lines)=left(rec,recpos-1)+"-"
    lines=lines+1
    rec=mid(rec,recpos+1)
    goto [BREAK LINE]
    end if
    else
    a(lines)=rec
    lines=lines+1
    end if
    if lines < pagelength*2 then goto [KEEP LOADING ARRAY]
    end if
    if lines = 0 then goto [END OF FILE]
    for i = 0 to (pagelength-1)
    leftside = a(i)
    klen=linewidth-len(leftside)
    rightside = a(i + pagelength)
    bothsides = leftside + space(klen)+ "|" + rightside
    print #2,bothsides
    next i
    print #2,chr(12);
    pcnt=pcnt+1
    column 0
    print pcnt+" pages generated";
    goto [CLEAR ARRAY AND LOAD]
[END OF FILE] REM
    close #1
    print #2, finalcode;
    close #2
    end
[2COFILE] REM
    if left(outputfile,1)="-"
    then
    inifile = mid(outputfile,2)
    outputfile = ""
    else
    inifile="DEFAULT.2CO"
    end if
    tilde="~"
    dquote=chr(34)
    x=0
    rec=NULL
    spc=space(1)
    printcode=NULL
    printdevice=NULL
    finalcode=NULL
    if access(inifile)=0
    then
    path = environ("PATH")
[PRS] subpath = parse(path,NULL,NULL,NULL,";")
    if len(subpath) > 0
    then
    if right(subpath,1)<>"\" then subpath=subpath+"\"
    search = subpath+inifile
    if access(search)>0 then goto [READ.2CO] 'fnd!
    goto [PRS] 'prs
    end if
    subpath = environ("2COL")
    if len(subpath) > 0
    then
    if right(subpath,1)<>"\" then subpath=subpath+"\"
    search = subpath+inifile
    if access(search) > 0 then goto [READ.2CO] 'fnd at last!
    end if
    print "Could not find ";inifile;" locally, on the path, or via the 2COL variable."
    print "No printer control codes sent. No modification of system defaults."
    return
    else
    search=inifile
    end if
[READ.2CO] REM
    inifile=search
    open #3, "r", inifile
[KEEP READING] if not eof(3)
    then
    line input #3, rec
[SWAP TILDE] x=instr(rec,tilde)
    if x <> 0
    then
    rec = strovr(rec,x,dquote)
    goto [SWAP TILDE]
    end if
    execute rec
    goto [KEEP READING]
    end if
    close #3
    return
[DETABSTART] REM
    'assuming stuff to be detabbed in cDetabRec
    'assuming width to be inserted in detabwidth
    cDtemp=cDetabRec
[DETAB] REM
    dindx=instr(cDtemp,chr(9))
    if dindx <> 0
    then
    dspace=detabwidth-(dindx mod detabwidth)
    cDtemp=left(cDetabRec,dindx-1)+space(dspace)+mid(cDetabRec,dindx+1)
    cDetabRec=cDtemp
    goto [DETAB]
    end if
    return
[KILL FF] REM
    'assuming position of ff is in ffpos
    'assuming copy of rec in ffrec
    if ffswap = NULL then ffswap = "<FF>"
    ffleft = left(ffrec,ffpos-1)
    ffright= mid(ffrec,ffpos+1,255)
    ffrec=ffleft + ffswap + ffright
    return
